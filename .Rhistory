library(here)
# Load Data
filename <- 'Feedback_Data.csv'
read.csv(here('data', 'raw', filename), header = TRUE)
data <- read.csv(here('data', 'raw', filename), header = TRUE)
View(data)
# Load Data
filename <- 'Feedback_Data.csv'
data <- read.csv(here('data', 'raw', filename), header = TRUE)
View(data)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/00_Setup.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/01_Load_Data.R", echo=TRUE)
library(dplyr)
library(ggplot2)
filename <- 'Feedback_Data.csv'
data <- read.csv(here('data', 'raw', filename), header = TRUE)
data_original <- data
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
library(tidyr)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
data <- as.data.frame(data)
data_all_conditions <- data
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data, p1_before:p6_before), na.rm = TRUE))
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
data_all_conditions <- na.omit(data_all_conditions[data_all_conditions$totalPerformance > 170, ]) # removes participants not able to achieve 170 correct trials
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
data_all_conditions <- data
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data, p1_before:p6_before), na.rm = TRUE))
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
View(data_all_conditions)
data_all_conditions[data_all_conditions$totalPerformance > 170, ]
na.omit(data_all_conditions[data_all_conditions$totalPerformance > 170, ])
data_all_conditions <- data
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data, p1_before:p6_before), na.rm = TRUE))
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
data_all_conditions <- data_all_conditions[data_all_conditions$totalPerformance > 170, ] # removes participants not able to achieve 170 correct trials
View(data_all_conditions)
# Remove data that isn't working properly
data_all_conditions <- na.omit(data_all_conditions[!is.na(data_all_conditions$t1), ]) # removes participants with NA in t1
data_all_conditions <- data
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data, p1_before:p6_before), na.rm = TRUE))
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
data_all_conditions <- data_all_conditions[data_all_conditions$totalPerformance > 170, ] # removes participants not able to achieve 170 correct trials
# Remove data that isn't working properly
data_all_conditions <- data_all_conditions[!is.na(data_all_conditions$t1), ] # removes participants with NA in t1
View(data_all_conditions)
# Remove data not applicable to this dataset
columns_to_remove <- c('r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'p1_after', 'p2_after', 'p3_after', 'p4_after', 'p5_after', 'p6_after')
data_all_conditions <- data_all_conditions[ , !(names(data_all_conditions) %in% columns_to_remove)]
View(data_all_conditions)
# Data Renaming
data_all_conditions <- data_all_conditions %>%
mutate(condition = case_when(
condition == 1 ~ "50% Decreasing", # Relabel condition 1
condition == 2 ~ "50% Increasing", # Relabel condition 2
condition == 3 ~ "70% Decreasing", # Relabel condition 3
condition == 4 ~ "70% Increasing", # Relabel condition 4
TRUE ~ as.character(condition)  # Handles any other unforeseen values gracefully
))
data_all_conditions <- rename(data_all_conditions, Participant = participant.number)
data_all_conditions <- rename(data_all_conditions, Condition = condition)
# Data Formatting
data_all_conditions$Condition <- as.factor(data_all_conditions$Condition)
data_all_conditions$Participant <- as.factor(data_all_conditions$Participant)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
rlang::last_trace()
View(data_all_conditions)
View(data_all_conditions)
View(data_all_conditions)
# Long Format Data
# data_all_conditions_long <- data_all_conditions %>%
#   select(Participant, Condition, r1, r2, r3, r4, r5, r6) %>% # sel
#   pivot_longer(cols = starts_with("r"), # find a r1:r6
#                names_to = "Block", # put in Block column
#                values_to = "Reliance") # values to Reliance column
data_all_conditions_long <- data_all_conditions %>%
select(-totalPerformance) %>% # remove unneeded columns)
pivot_longer(cols = starts_with("t"), # find a t1:t6
names_to = "Block", # put in Block column
values_to = "Trust") # values to Trust column
View(data_all_conditions_long)
View(data_all_conditions)
View(data_all_conditions_long)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
# Figure Parameters
model_1 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant))
summary(model_1)
library(lme4))
library(lme4)
source("~/.active-rstudio-document")
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
model_1 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant))
summary(model_1)
tab_model(model_1)
library(sjPlot)
tab_model(model_1)
model_2 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Condition))
summary(model_2)
tab_model(model_2)
View(data_all_conditions_long)
model_3 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant) + (1 | Condition))
summary(model_3)
tab_model(model_3)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
View(data_all_conditions_long)
View(data_all_conditions)
View(data_all_conditions_long)
View(data_all_conditions_long)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
View(data_all_conditions)
filename <- 'Feedback_Data.csv'
data <- read.csv(here('data', 'raw', filename), header = TRUE)
data_original <- data
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
View(data_all_conditions)
View(data_all_conditions_long)
tab_model(model_3)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
View(data_all_conditions_long)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
model_1 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant))
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/00_Setup.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/01_Load_Data.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
model_1 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant))
summary(model_1)
tab_model(model_1)
model_2 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Condition))
summary(model_2)
tab_model(model_2)
model_3 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant) + (1 | Condition))
summary(model_3)
tab_model(model_3)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
summary(model_4)
tab_model(model_4)
model_5 <- lmer(data = data_long, Trust ~ Condition * as.factor(Reliability) * Confidence + (1 | Condition))
summary(model_5)
tab_model(model_5)
model_6 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant) + (1 | Condition))
summary(model_6)
tab_model(model_6)
tab_model(model_6)
model_7 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence * Reliance + (1 | Participant))
summary(model_7)
tab_model(model_7)
model_7 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence * Reliance + (1 | Participant))
summary(model_7)
model_7 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence * Reliance + (1 | Participant))
model_6 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant) + (1 | Condition))
summary(model_6)
tab_model(model_6)
View(data_all_conditions_long)
View(data_all_conditions_long)
View(data_all_conditions)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
View(data_all_conditions_long)
data <- data_original
data <- as.data.frame(data)
data_all_conditions <- data
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data, p1_before:p6_before), na.rm = TRUE))
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
data_all_conditions <- data_all_conditions[data_all_conditions$totalPerformance > 170, ] # removes participants not able to achieve 170 correct trials
# Remove data that isn't working properly
data_all_conditions <- data_all_conditions[!is.na(data_all_conditions$t1), ] # removes participants with NA in t1
# Remove data not applicable to this dataset
columns_to_remove <- c('r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'p1_after', 'p2_after', 'p3_after', 'p4_after', 'p5_after', 'p6_after', 'or1', 'or2', 'or3', 'or4', 'or5', 'or6')
data_all_conditions <- data_all_conditions[ , !(names(data_all_conditions) %in% columns_to_remove)]
# Data Renaming
data_all_conditions <- data_all_conditions %>%
mutate(condition = case_when(
condition == 1 ~ "50% Decreasing", # Relabel condition 1
condition == 2 ~ "50% Increasing", # Relabel condition 2
condition == 3 ~ "70% Decreasing", # Relabel condition 3
condition == 4 ~ "70% Increasing", # Relabel condition 4
TRUE ~ as.character(condition)  # Handles any other unforeseen values gracefully
))
data_all_conditions <- rename(data_all_conditions, Participant = participant.number)
data_all_conditions <- rename(data_all_conditions, Condition = condition)
# Data Formatting
data_all_conditions$Condition <- as.factor(data_all_conditions$Condition)
data_all_conditions$Participant <- as.factor(data_all_conditions$Participant)
# Long Format Data
# data_all_conditions_long <- data_all_conditions %>%
#   select(Participant, Condition, r1, r2, r3, r4, r5, r6) %>% # sel
#   pivot_longer(cols = starts_with("r"), # find a r1:r6
#                names_to = "Block", # put in Block column
#                values_to = "Reliance") # values to Reliance column
data_all_conditions_long <- data_all_conditions %>%
select(-totalPerformance) %>% # remove unneeded columns)
pivot_longer(cols = starts_with("t"), # find a t1:t6
names_to = "Block", # put in Block column
values_to = "Trust") # values to Trust column
View(data_all_conditions_long)
source("~/Documents/MATLAB/Blue_Orange_Feed/BO_Analysis_Feedback/scripts/02_Preprocessing.R", echo=TRUE)
View(data_all_conditions_long)
model_1 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant))
summary(model_1)
tab_model(model_1)
model_7 <- lmer(data = data_long, Performance_Before ~ Condition * Reliability * Confidence + (1 | Participant) + (1 | Condition))
summary(model_7)
tab_model(model_7)
